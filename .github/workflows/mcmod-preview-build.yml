# 動作確認用ビルドを行う
# 手動(workflow_dispatch)で実行することが前提
name: Preview Build

on:
  workflow_call:
    inputs:
      before_build_tasks: # ビルド前に実行するgradleコマンド(データジェネレータの実行などに利用)
        required: false
        type: string
      build_tasks: # ビルドする際に実行するgradleコマンド
        required: true
        type: string
    secrets:
      maven_password: # Mavenのパスワード
        required: false
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout # チェックアウト
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore cache # キャッシュを復元
        id: cache-primes-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            .gradle/loom-cache
            .gradle/caches
            .gradle/wrapper
          key: gradle

      - name: Update Version # バージョン更新
        uses: TeamFelnull/actions-reusable-workflows/.github/actions/mcmod-preview-build-update-version@master

      - name: Setup # セットアップ
        uses: TeamFelnull/actions-reusable-workflows/.github/actions/mcmod-setup@master

      - name: Verification # 検証
        uses: TeamFelnull/actions-reusable-workflows/.github/actions/mcmod-preview-build-verification@master
        with:
          maven-password: ${{ secrets.maven_password }}

      - name: Build #ビルド
        shell: bash
        run: |
          if [ -d ./fabric ] && [ -d ./forge ]; then
          mkdir -p /home/runner/.gradle/caches/fabric-loom/assets
          fi
          
          if [ -n "${{ inputs.before_build_tasks }}" ]; then
          ./gradlew ${{ inputs.before_build_tasks }} --stacktrace --no-daemon
          fi
          
          ./gradlew ${{ inputs.build_tasks }} --stacktrace --no-daemon
        env:
          mavenpassword: ${{ secrets.maven_password }}

      - name: Collect Build #リリースするファイルを収集
        shell: bash
        run: |
          mkdir release
          cd release
          
          if [ -d ../fabric/build/libs ] && [ -d ../forge/build/libs ]; then
          echo "Cloth platform..."
          cp -r ../fabric/build/libs/. ./
          cp -r ../forge/build/libs/. ./
          else
          echo "Single platform..."
          cp -r ../build/libs/. ./
          fi

      - name: Generate Hash #リリースするファイルのハッシュファイルを生成
        uses: TeamFelnull/actions-reusable-workflows/.github/actions/hashing-directory@master
        with:
          directory_path: "${{ github.workspace }}/release"

      - name: Upload Artifact #アーティファクトをアップロード
        uses: actions/upload-artifact@v3
        with:
          name: releases
          path: release/*

      - name: Save cache #キャッシュを保存
        uses: actions/cache/save@v3
        if: startsWith(github.ref, 'refs/heads/')
        with:
          path: |
            .gradle/loom-cache
            .gradle/caches
            .gradle/wrapper
          key: gradle